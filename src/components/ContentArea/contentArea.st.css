/* contentArea.st.css */
@property st-global(--vh);

.root {}

.scroll {
  /**
   * The below requires a global --vh unit to be set with JS. The reason
   * is that mobile doesn't register height as you might expect dependant
   * on if the taskbar is up or not. Differences in device behavour also
   * is an issue. This measures and sets a CSS variable so we can use that
   * or it will fallback to the native 1vh.
   * e.g: 
      const vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty("--vh", `${vh}px`);
   */
  /* This dictates the height of the whole layout, 65 is the height of the header. */
  height: calc(var(--vh, 1vh) * 100 - 65px);
  overflow-x: hidden;
  overflow-y: scroll;
  display: flex;
  flex-direction: column;
}
